<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Littlekid&#39;s blog</title>
  <subtitle>Just like a littlekid</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-10-18T14:46:46.936Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>littlekid</name>
    <email>muyunlei@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一个C写的简易聊天室</title>
    <link href="http://yoursite.com/2016/10/28/%E4%B8%80%E4%B8%AAC%E5%86%99%E7%9A%84%E7%AE%80%E6%98%93%E8%81%8A%E5%A4%A9%E5%AE%A4/"/>
    <id>http://yoursite.com/2016/10/28/一个C写的简易聊天室/</id>
    <published>2016-10-27T16:00:00.000Z</published>
    <updated>2016-10-18T14:46:46.936Z</updated>
    
    <content type="html">&lt;p&gt;近期有些空闲，正好趁着这段时间做些练手的项目巩固一些Linux下C编程:)&lt;/p&gt;
&lt;h1 id=&quot;技术&quot;&gt;&lt;a href=&quot;#技术&quot; class=&quot;headerlink&quot; title=&quot;技术&quot;&gt;&lt;/a&gt;技术&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;TCP Socket编程&lt;/li&gt;
&lt;li&gt;SYS V消息队列&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;设计&quot;&gt;&lt;a href=&quot;#设计&quot; class=&quot;headerlink&quot; title=&quot;设计&quot;&gt;&lt;/a&gt;设计&lt;/h1&gt;&lt;p&gt;几乎没有设计。。简单的服务端/客户端设计，使用TCP传输数据，消息队列做进程间通信。&lt;/p&gt;
&lt;h2 id=&quot;Server-Client&quot;&gt;&lt;a href=&quot;#Server-Client&quot; class=&quot;headerlink&quot; title=&quot;Server/Client&quot;&gt;&lt;/a&gt;Server/Client&lt;/h2&gt;&lt;p&gt;&lt;em&gt;server端&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主进程监听，子进程处理每个客户端&lt;/li&gt;
&lt;li&gt;子进程的子进程收其他进程消息发送给当前客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;client端&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个进程，一个进程获得终端输入，一个进程收socket数据输出&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;结构定义&quot;&gt;&lt;a href=&quot;#结构定义&quot; class=&quot;headerlink&quot; title=&quot;结构定义&quot;&gt;&lt;/a&gt;结构定义&lt;/h2&gt;&lt;p&gt;&lt;em&gt;消息队列结构&lt;/em&gt;&lt;br&gt;    typedef struct mqmesg{&lt;br&gt;        long mtype;&lt;br&gt;        long mlen;&lt;br&gt;        char mdata[MAXLEN];&lt;br&gt;    }message;&lt;/p&gt;
&lt;p&gt;用户登录信息结构&lt;br&gt;    typedef struct lginfo{&lt;br&gt;        struct tm        &lt;em&gt;login_time; // 登录时间结构&lt;br&gt;        struct sockaddr_in    &lt;/em&gt;cliaddr; // 客户端IPV4结构&lt;br&gt;        char            login_name[50+1]; // 用户登录名&lt;br&gt;    }loginfo;&lt;/p&gt;
&lt;h1 id=&quot;模块&quot;&gt;&lt;a href=&quot;#模块&quot; class=&quot;headerlink&quot; title=&quot;模块&quot;&gt;&lt;/a&gt;模块&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通用模块 util.c&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ssize_t readn(int, void *, size_t); // 循环read函数，确保收取n字节&lt;/li&gt;
&lt;li&gt;ssize_t writen(int, void *, size_t); // 循环write函数，确保发送n字节&lt;/li&gt;
&lt;li&gt;int sendMsg(int, void *, int); // 发送socket封装函数&lt;/li&gt;
&lt;li&gt;int recvMsg(int, void &lt;em&gt;, int &lt;/em&gt;); // 接收socket封装函数&lt;/li&gt;
&lt;li&gt;int mqMsgSTInit(message &lt;em&gt;, char &lt;/em&gt;, long, long); // 消息队列结构赋值函数&lt;/li&gt;
&lt;li&gt;ssize_t sendMq(int, message *); // 发送消息队列封装函数&lt;/li&gt;
&lt;li&gt;ssize_t recvMq(int, message *); // 接收消息队列封装函数&lt;/li&gt;
&lt;li&gt;int tm2DateTimeStr(struct tm &lt;em&gt;, char &lt;/em&gt;); // linux时间tm结构转YYYY-MM-DD HH:MM:SS字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务端功能模块 servfunc.c&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;int getClientCount(int); // 读取type 1消息代表的客户端数量&lt;/li&gt;
&lt;li&gt;int putClientCount(int, int); // 向消息队列写入客户端数量&lt;/li&gt;
&lt;li&gt;int login_serv(int, loginfo *); // 服务端登入处理函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;客户端功能模块 clifunc.c&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;int login_cli(int); // 客户端登入处理函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h1&gt;&lt;p&gt;&lt;em&gt;server 端&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include &amp;quot;chatroom.h&amp;quot;    

int main(int argc, char *argv[])
{
    struct sockaddr_in servaddr, cliaddr;
    socklen_t cliaddr_len;
    char buf[MAXLEN+1];
    char buf2[MAXLEN] = {0};
    char addr[INET_ADDRSTRLEN];
    int listenfd,connfd;
    int i,n,len;
    int pid;
    int client_count = 0;
    int fpid = getpid();    

    listenfd = socket(AF_INET, SOCK_STREAM, 0);
    bzero(&amp;amp;servaddr, sizeof(servaddr));
    servaddr.sin_family = AF_INET;
    servaddr.sin_addr.s_addr = htonl(INADDR_ANY);
    servaddr.sin_port = htons(SERVPORT);    

    bind(listenfd, (struct sockaddr *)&amp;amp;servaddr, sizeof(servaddr));    

    listen(listenfd, 20);
    printf(&amp;quot;Accepting connect...\n&amp;quot;);    

    int mq_fd = msgget(IPC_PRIVATE, SVMSG_MODE | IPC_CREAT);
    printf(&amp;quot;msgid:%d\n&amp;quot;,mq_fd);
    putClientCount(mq_fd, client_count);
    message *msg = (message *)malloc(sizeof(message));    

    while(1){
        cliaddr_len = sizeof(cliaddr);
        connfd = accept(listenfd, (struct sockaddr *)&amp;amp;cliaddr, &amp;amp;cliaddr_len);
        client_count = getClientCount(mq_fd);    
        client_count++;
        putClientCount(mq_fd, client_count);
        pid = fork();
        if(pid&amp;lt;0) printf(&amp;quot;fork err\n&amp;quot;);
        else if(pid&amp;gt;0){
            continue;
        }else{
            // child
            printf(&amp;quot;this is child process[%d]\n&amp;quot;, getpid());
            inet_ntop(AF_INET, &amp;amp;cliaddr.sin_addr, addr, sizeof(addr));
            printf(&amp;quot;Recieved connection form [%s] at PORT [%d]\n&amp;quot;, addr, ntohs(cliaddr.sin_port));
            int cliNo = client_count;
            char welcome[100] = {0};
            sprintf(welcome, &amp;quot;%s%d%s&amp;quot;, &amp;quot;-----welcome to chat room, current user no: &amp;quot;, client_count, &amp;quot;------&amp;quot;);
            sendMsg(connfd, welcome, strlen(welcome));    


            loginfo *cli_log_info = (loginfo *)malloc(sizeof(loginfo));
            cli_log_info-&amp;gt;cliaddr = &amp;amp;cliaddr;
            login_serv(connfd, cli_log_info); // client login    

            int pid2 = fork();
            if(pid2&amp;lt;0){ printf(&amp;quot;fork err\n&amp;quot;); continue;}
            else if(pid2&amp;gt;0){
                while(1){
                    memset(buf, 0x00, sizeof(buf));
                    if(recvMsg(connfd, buf, &amp;amp;len)&amp;lt;0){
                        printf(&amp;quot;The client [%d] closed the connection.\n&amp;quot;, getpid());
                        kill(pid2, SIGKILL);
                        break;
                    }
                    printf(&amp;quot;CLIENT[%s]PID[%d]:LOGIN_NAME[%s]:LEN[%d]:MSG[%s]\n&amp;quot;, addr, getpid(), cli_log_info-&amp;gt;login_name, len, buf);

                    time_t t = time(NULL);
                    struct tm *local = localtime(&amp;amp;t);
                    char tt[19+1] = {0};
                    tm2DateTimeStr(local, tt);

                    sprintf(buf2, &amp;quot;(%s) %s: %s&amp;quot;, tt, cli_log_info-&amp;gt;login_name, buf);
                //    strcat(buf, &amp;quot;[B]&amp;quot;);
    //                printf(&amp;quot;DEBUG: [%d], buf[%s]\n&amp;quot;, strlen(buf), buf);
                    client_count = getClientCount(mq_fd);
                    for(i=1;i&amp;lt;=client_count;i++){
                        if(i==cliNo) continue;
                        mqMsgSTInit(msg, buf2, strlen(buf2), 10000+i);
                        sendMq(mq_fd, msg);
                    }
                    putClientCount(mq_fd, client_count);
                }
            }else{
                while(1){
                    mqMsgSTInit(msg, NULL, 0, 10000+cliNo);
                    if(recvMq(mq_fd, msg)&amp;lt;=0) continue;
                    else{
                        sendMsg(connfd, msg-&amp;gt;mdata, msg-&amp;gt;mlen);
                    }
                }
            }
            client_count = getClientCount(mq_fd);
            client_count--;
            putClientCount(mq_fd, client_count);
            close(connfd);
            break;
        }
    }
    close(listenfd);
    free(msg);
    if(getpid() == fpid){
        printf(&amp;quot;msgctl----------\n&amp;quot;);
        msgctl(mq_fd, IPC_RMID, NULL);
    }    

    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;client 端&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include &amp;quot;chatroom.h&amp;quot;    

int main(int argc, char *argv[])
{
    struct sockaddr_in servaddr;
    char buf[MAXLEN], buf2[MAXLEN];
    int sockfd;
    int n,len,flag;
    int pid;
    char servip[15+1];
    int ret;    

    if(argc == 2)
    {
        strcpy(servip, argv[1]);
    }else{
        printf(&amp;quot;USAGE: client [serverip]\n&amp;quot;);
        exit(0);
    }    

    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    bzero(&amp;amp;servaddr, sizeof(servaddr));
    servaddr.sin_family = AF_INET;
    inet_pton(AF_INET, (const char *)servip, &amp;amp;servaddr.sin_addr);
    servaddr.sin_port = htons(SERVPORT);    


    ret = connect(sockfd, (struct sockaddr *)&amp;amp;servaddr, sizeof(servaddr));
    if(!ret)
        printf(&amp;quot;Connect succeed!\n&amp;quot;);
    else{
        printf(&amp;quot;Cant connect to the server:%s\n&amp;quot;, servip);
        exit(1);
    }    

    // recieve welcome message
    memset(buf, 0x00, sizeof(buf));
    recvMsg(sockfd, buf, &amp;amp;len);
    printf(&amp;quot;%s\n&amp;quot;, buf);    

    // login
    login_cli(sockfd);    

    printf(&amp;quot;---------------------------------------------------------------\n&amp;quot;);

    pid = fork();
    if(pid&amp;lt;0){
        printf(&amp;quot;fork err\n&amp;quot;);
        exit(1);
    }else if(pid&amp;gt;0){
        while(fgets(buf, MAXLEN, stdin)){
            memset(&amp;amp;buf[strlen(buf)-1], 0, 1); // delete the last \n
            sendMsg(sockfd, buf, strlen(buf));
        }
    }else{
        while(1){
            memset(buf2, 0x00, sizeof(buf2));
            if(recvMsg(sockfd, buf2, &amp;amp;len)&amp;lt;0){
                printf(&amp;quot;Server [%s] closed connection\n&amp;quot;, servip);
                break;
            }
            printf(&amp;quot;&amp;gt; %s\n&amp;quot;, buf2);
        }
    }
    close(sockfd);    

    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;- 目前已知的几个缺陷：
    - 客户端终端输入输出在一起，有时候输入时会有输出冒出来
    - Ctrl-C kill掉服务端后，建立的消息队列没有删除
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;近期有些空闲，正好趁着这段时间做些练手的项目巩固一些Linux下C编程:)&lt;/p&gt;
&lt;h1 id=&quot;技术&quot;&gt;&lt;a href=&quot;#技术&quot; class=&quot;headerlink&quot; title=&quot;技术&quot;&gt;&lt;/a&gt;技术&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;TCP Socket编程&lt;/li&gt;
&lt;
    
    </summary>
    
      <category term="programing" scheme="http://yoursite.com/categories/programing/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="C" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>近期学习计划</title>
    <link href="http://yoursite.com/2016/06/26/%E8%BF%91%E6%9C%9F%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    <id>http://yoursite.com/2016/06/26/近期学习计划/</id>
    <published>2016-06-26T07:00:00.000Z</published>
    <updated>2016-06-26T06:38:49.843Z</updated>
    
    <content type="html">&lt;p&gt;在轮训期间游荡了两个月之后，终于来到了软件开发岗。&lt;/p&gt;
&lt;p&gt;本以为会被分去写Java，结果可选的几个组都是用c的:|&lt;/p&gt;
&lt;p&gt;压力好大。。。&lt;/p&gt;
&lt;p&gt;近期计划是多学习Unix C编程，尽快能够满足工作的要求。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;技术要求&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C基础&lt;/li&gt;
&lt;li&gt;Unix C开发&lt;/li&gt;
&lt;li&gt;网络编程：TCP通信和IPC通信&lt;/li&gt;
&lt;li&gt;Makefile&lt;/li&gt;
&lt;li&gt;Vim编辑器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;书单&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;C语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《Linux C一站式开发》&lt;br&gt;  写的比较全且易懂，过一遍达到复习和补全的作用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unix编程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《Unix环境高级编程》&lt;br&gt;  组里老大推荐的书，1-2天一章&lt;/li&gt;
&lt;li&gt;《Unix网络编程》&lt;br&gt;  一本讲Socket，一本讲进程间通信&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在轮训期间游荡了两个月之后，终于来到了软件开发岗。&lt;/p&gt;
&lt;p&gt;本以为会被分去写Java，结果可选的几个组都是用c的:|&lt;/p&gt;
&lt;p&gt;压力好大。。。&lt;/p&gt;
&lt;p&gt;近期计划是多学习Unix C编程，尽快能够满足工作的要求。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;技术要求&lt;/e
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="计划" scheme="http://yoursite.com/tags/%E8%AE%A1%E5%88%92/"/>
    
      <category term="书目" scheme="http://yoursite.com/tags/%E4%B9%A6%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>文章备份链接</title>
    <link href="http://yoursite.com/2016/05/25/%E6%96%87%E7%AB%A0%E5%A4%87%E4%BB%BD%E9%93%BE%E6%8E%A5/"/>
    <id>http://yoursite.com/2016/05/25/文章备份链接/</id>
    <published>2016-05-25T08:21:59.000Z</published>
    <updated>2016-05-25T08:26:49.423Z</updated>
    
    <content type="html">&lt;p&gt;之前文章在作业部落的链接&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.zybuluo.com/littlekid/note/66980&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RSHandbook笔记P1C1：推荐系统中的数据挖掘方法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.zybuluo.com/littlekid/note/67262&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RSHandbook笔记P1C4：基于邻域推荐方法的综述&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.zybuluo.com/littlekid/note/166627&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IJCAI-15 商家促销后的重复买家预测比赛纪实&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前文章在作业部落的链接&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.zybuluo.com/littlekid/note/66980&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RSHandbook笔记P1C1：推荐系统中
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
      <category term="备份" scheme="http://yoursite.com/tags/%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>永远像个孩子</title>
    <link href="http://yoursite.com/2016/05/25/%E6%B0%B8%E8%BF%9C%E5%83%8F%E4%B8%AA%E5%AD%A9%E5%AD%90/"/>
    <id>http://yoursite.com/2016/05/25/永远像个孩子/</id>
    <published>2016-05-24T16:00:00.000Z</published>
    <updated>2016-05-25T08:18:20.968Z</updated>
    
    <content type="html">&lt;h1 id=&quot;博客&quot;&gt;&lt;a href=&quot;#博客&quot; class=&quot;headerlink&quot; title=&quot;博客&quot;&gt;&lt;/a&gt;博客&lt;/h1&gt;&lt;p&gt;前几天突然想起来自己还有个博客，于是兴冲冲地重新搭起Hexo来，但是我愚蠢地把github远程仓库的备份给覆盖了。我都给自己蠢哭了。&lt;/p&gt;
&lt;p&gt;值得庆幸的是，由于我比xiang较dang懒，之前的站点上也没几篇文章，而且部分在&lt;a href=&quot;https://www.zybuluo.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;作业部落&lt;/a&gt;上也有备份。&lt;/p&gt;
&lt;p&gt;这两天重新弄了一下这个博客，用了个比较简洁漂亮的主题。&lt;/p&gt;
&lt;h1 id=&quot;Just-like-a-littlekid&quot;&gt;&lt;a href=&quot;#Just-like-a-littlekid&quot; class=&quot;headerlink&quot; title=&quot;Just like a littlekid&quot;&gt;&lt;/a&gt;Just like a littlekid&lt;/h1&gt;&lt;p&gt;大学的时候，因为我长的比较年轻，我有个外号叫“小孩”。&lt;/p&gt;
&lt;p&gt;我觉得这个外号不错。&lt;/p&gt;
&lt;p&gt;在这个年纪能活得像个孩子是最美好不过的了。因为可以无耻地逃避作为成年人的责任，可以穿着“理想主义”的盔甲横冲直撞。&lt;/p&gt;
&lt;p&gt;但人不可能总为自己活着，总要成熟。&lt;/p&gt;
&lt;p&gt;希望自己在人生的丛林中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不忘初心，Just like a littlekid&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;\images\jllk\244.jpg&quot; alt=&quot;rock&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;博客&quot;&gt;&lt;a href=&quot;#博客&quot; class=&quot;headerlink&quot; title=&quot;博客&quot;&gt;&lt;/a&gt;博客&lt;/h1&gt;&lt;p&gt;前几天突然想起来自己还有个博客，于是兴冲冲地重新搭起Hexo来，但是我愚蠢地把github远程仓库的备份给覆盖了。我都给自己蠢哭了。&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="杂感" scheme="http://yoursite.com/tags/%E6%9D%82%E6%84%9F/"/>
    
      <category term="童年" scheme="http://yoursite.com/tags/%E7%AB%A5%E5%B9%B4/"/>
    
  </entry>
  
  <entry>
    <title>Markdown简明教程</title>
    <link href="http://yoursite.com/2016/05/23/hello-world/"/>
    <id>http://yoursite.com/2016/05/23/hello-world/</id>
    <published>2016-05-22T16:00:00.000Z</published>
    <updated>2016-05-23T09:16:50.614Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Markdown简明教程&quot;&gt;&lt;a href=&quot;#Markdown简明教程&quot; class=&quot;headerlink&quot; title=&quot;Markdown简明教程&quot;&gt;&lt;/a&gt;Markdown简明教程&lt;/h1&gt;&lt;p&gt;转载自作业部落&lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https%3A%2F%2Fwww.zybuluo.com%2Fstatic%2Feditor%2Fmd-help.markdown#full-reader&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;划去了Hexo不能渲染的部分&lt;/p&gt;
&lt;h2 id=&quot;斜体和粗体&quot;&gt;&lt;a href=&quot;#斜体和粗体&quot; class=&quot;headerlink&quot; title=&quot;斜体和粗体&quot;&gt;&lt;/a&gt;斜体和粗体&lt;/h2&gt;&lt;p&gt;使用 * 和 ** 表示斜体和粗体。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;这是 &lt;em&gt;斜体&lt;/em&gt;，这是 &lt;strong&gt;粗体&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;分级标题&quot;&gt;&lt;a href=&quot;#分级标题&quot; class=&quot;headerlink&quot; title=&quot;分级标题&quot;&gt;&lt;/a&gt;分级标题&lt;/h2&gt;&lt;p&gt;使用 === 表示一级标题，使用 — 表示二级标题。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;这是一个一级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;============================&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这是一个二级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### 这是一个三级标题&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。&lt;/p&gt;
&lt;h2 id=&quot;外链接&quot;&gt;&lt;a href=&quot;#外链接&quot; class=&quot;headerlink&quot; title=&quot;外链接&quot;&gt;&lt;/a&gt;外链接&lt;/h2&gt;&lt;p&gt;使用 [描述](链接地址) 为文字增加外链接。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;这是去往 &lt;a href=&quot;http://fisfog.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;本人博客&lt;/a&gt; 的链接。&lt;/p&gt;
&lt;h2 id=&quot;无序列表&quot;&gt;&lt;a href=&quot;#无序列表&quot; class=&quot;headerlink&quot; title=&quot;无序列表&quot;&gt;&lt;/a&gt;无序列表&lt;/h2&gt;&lt;p&gt;使用 *，+，- 表示无序列表。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无序列表项 一&lt;/li&gt;
&lt;li&gt;无序列表项 二&lt;/li&gt;
&lt;li&gt;无序列表项 三&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;有序列表&quot;&gt;&lt;a href=&quot;#有序列表&quot; class=&quot;headerlink&quot; title=&quot;有序列表&quot;&gt;&lt;/a&gt;有序列表&lt;/h2&gt;&lt;p&gt;使用数字和点表示有序列表。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有序列表项 一&lt;/li&gt;
&lt;li&gt;有序列表项 二&lt;/li&gt;
&lt;li&gt;有序列表项 三&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;文字引用&quot;&gt;&lt;a href=&quot;#文字引用&quot; class=&quot;headerlink&quot; title=&quot;文字引用&quot;&gt;&lt;/a&gt;文字引用&lt;/h2&gt;&lt;p&gt;使用 &amp;gt; 表示文字引用。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;野火烧不尽，春风吹又生。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;行内代码块&quot;&gt;&lt;a href=&quot;#行内代码块&quot; class=&quot;headerlink&quot; title=&quot;行内代码块&quot;&gt;&lt;/a&gt;行内代码块&lt;/h2&gt;&lt;p&gt;使用 `代码` 表示行内代码块。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;让我们聊聊 &lt;code&gt;html&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;代码块&quot;&gt;&lt;a href=&quot;#代码块&quot; class=&quot;headerlink&quot; title=&quot;代码块&quot;&gt;&lt;/a&gt;代码块&lt;/h2&gt;&lt;p&gt;使用 四个缩进空格 表示代码块。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;这是一个代码块，此行左侧有四个不可见的空格。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;插入图像&quot;&gt;&lt;a href=&quot;#插入图像&quot; class=&quot;headerlink&quot; title=&quot;插入图像&quot;&gt;&lt;/a&gt;插入图像&lt;/h2&gt;&lt;p&gt;使用 ![描述](图片链接地址) 插入图像。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;\images\avtar.jpg&quot; alt=&quot;我的头像&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Cmd-Markdown-高阶语法手册&quot;&gt;&lt;a href=&quot;#Cmd-Markdown-高阶语法手册&quot; class=&quot;headerlink&quot; title=&quot;Cmd Markdown 高阶语法手册&quot;&gt;&lt;/a&gt;Cmd Markdown 高阶语法手册&lt;/h1&gt;&lt;h2 id=&quot;内容目录&quot;&gt;&lt;a href=&quot;#内容目录&quot; class=&quot;headerlink&quot; title=&quot;内容目录&quot;&gt;&lt;/a&gt;&lt;del&gt;内容目录&lt;/del&gt;&lt;/h2&gt;&lt;p&gt;&lt;del&gt;在段落中填写 &lt;code&gt;[TOC]&lt;/code&gt; 以显示全文内容的目录结构。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;[TOC]&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&quot;标签分类&quot;&gt;&lt;a href=&quot;#标签分类&quot; class=&quot;headerlink&quot; title=&quot;标签分类&quot;&gt;&lt;/a&gt;标签分类&lt;/h2&gt;&lt;p&gt;在编辑区任意行的列首位置输入以下代码给文稿标签：&lt;/p&gt;
&lt;p&gt;&lt;del&gt;标签： 数学 英语 Markdown&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;或者&lt;/del&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Tags： 
    - 数学
    - 英语 
    - Markdown
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;删除线&quot;&gt;&lt;a href=&quot;#删除线&quot; class=&quot;headerlink&quot; title=&quot;删除线&quot;&gt;&lt;/a&gt;删除线&lt;/h2&gt;&lt;p&gt;使用 ~~ 表示删除线。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;这是一段错误的文本。&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&quot;注脚&quot;&gt;&lt;a href=&quot;#注脚&quot; class=&quot;headerlink&quot; title=&quot;注脚&quot;&gt;&lt;/a&gt;&lt;del&gt;注脚&lt;/del&gt;&lt;/h2&gt;&lt;p&gt;&lt;del&gt;使用 [^keyword] 表示注脚。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;这是一个注脚[^footnote]的样例。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;这是第二个注脚[^footnote2]的样例。&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&quot;LaTeX-公式&quot;&gt;&lt;a href=&quot;#LaTeX-公式&quot; class=&quot;headerlink&quot; title=&quot;LaTeX 公式&quot;&gt;&lt;/a&gt;LaTeX 公式&lt;/h2&gt;&lt;p&gt;$ 表示行内公式： &lt;/p&gt;
&lt;p&gt;质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。&lt;/p&gt;
&lt;p&gt;$$ 表示整行公式：&lt;/p&gt;
&lt;p&gt;$$\sum_{i=1}^n a_i=0$$&lt;/p&gt;
&lt;p&gt;$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$&lt;/p&gt;
&lt;!-- $$\sum^{j-1}_{k=0}\hat{\gamma}_{kj} z_k$$ --&gt;
&lt;p&gt;访问 &lt;a href=&quot;http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MathJax&lt;/a&gt; 参考更多使用方法。&lt;/p&gt;
&lt;h2 id=&quot;加强的代码块&quot;&gt;&lt;a href=&quot;#加强的代码块&quot; class=&quot;headerlink&quot; title=&quot;加强的代码块&quot;&gt;&lt;/a&gt;加强的代码块&lt;/h2&gt;&lt;p&gt;支持四十一种编程语言的语法高亮的显示，行号显示。&lt;/p&gt;
&lt;p&gt;非代码示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install vim-gnome&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Python 示例：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@requires_authorization&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;somefunc&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(param1=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, param2=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;A docstring&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; param1 &amp;gt; param2: &lt;span class=&quot;comment&quot;&gt;# interesting&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Greater&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (param2 - param1 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SomeClass&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;message = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;interpreter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;... &lt;/span&gt;prompt&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;JavaScript 示例：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* nth element in the fibonacci series.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* @param n &amp;gt;= 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* @return the nth element, &amp;gt;= 0.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fib&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, b = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (--n &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tmp = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a += b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(fib(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;表格支持&quot;&gt;&lt;a href=&quot;#表格支持&quot; class=&quot;headerlink&quot; title=&quot;表格支持&quot;&gt;&lt;/a&gt;表格支持&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;价格&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;数量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;计算机&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;\$1600&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;手机&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;\$12&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;管线&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;\$1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;234&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;Html-标签&quot;&gt;&lt;a href=&quot;#Html-标签&quot; class=&quot;headerlink&quot; title=&quot;Html 标签&quot;&gt;&lt;/a&gt;Html 标签&lt;/h2&gt;&lt;p&gt;本站支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;th rowspan=&amp;quot;2&amp;quot;&amp;gt;值班人员&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;星期一&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;星期二&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;星期三&amp;lt;/th&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;李强&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;张明&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;王平&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt;&lt;br&gt;        &lt;th&gt;星期一&lt;/th&gt;&lt;br&gt;        &lt;th&gt;星期二&lt;/th&gt;&lt;br&gt;        &lt;th&gt;星期三&lt;/th&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;李强&lt;/td&gt;&lt;br&gt;        &lt;td&gt;张明&lt;/td&gt;&lt;br&gt;        &lt;td&gt;王平&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;&lt;/table&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Markdown简明教程&quot;&gt;&lt;a href=&quot;#Markdown简明教程&quot; class=&quot;headerlink&quot; title=&quot;Markdown简明教程&quot;&gt;&lt;/a&gt;Markdown简明教程&lt;/h1&gt;&lt;p&gt;转载自作业部落&lt;a href=&quot;https://www.zy
    
    </summary>
    
      <category term="Markdown" scheme="http://yoursite.com/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
      <category term="教程" scheme="http://yoursite.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="转载" scheme="http://yoursite.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
</feed>
